'''anonymizer hw'''import csv# create 2 files# def bridges_purpose(file_in, purpose_field_name, purpose, file_out):def make_headers(new_h, all_fieldnames, fields_to_remove):    anon_fieldnames = [new_h]    table_fieldnames = [new_h]    for field in all_fieldnames:        if field in fields_to_remove:            table_fieldnames.append(field)        else:            anon_fieldnames.append(field)    return anon_fieldnames, table_fieldnamesdef write_both_headers(anon_file, anon_fieldnames, table_file, table_fieldnames):    anon_dict_writer = csv.DictWriter(anon_file, anon_fieldnames)    anon_dict_writer.writeheader()    table_writer = csv.DictWriter(table_file, table_fieldnames)    table_writer.writeheader()    return anon_dict_writer, table_writer    def fill_both_files(dict_reader, anon_fieldnames, table_fieldnames, \                anon_dict_writer, table_writer, new_header):    id_counter = int(1)        for row in dict_reader:        new_anon_row = {}        new_table_row = {}        new_anon_row.update({new_header: id_counter})        new_table_row.update({new_header: id_counter})        for column in row:            if column in anon_fieldnames:                new_anon_row.update({column: row[column]})            elif column in table_fieldnames:                new_table_row.update({column: row[column]})                id_counter += 1                anon_dict_writer.writerow(new_anon_row)        table_writer.writerow(new_table_row)def anonymize(orig_file, fields_to_remove, anon_file = 'out.txt', new_header = 'ID', table_file = 'table.txt'):    with open(orig_file,'r') as f_in, \            open(anon_file,'w', newline='') as anon_file, \            open(table_file, 'w') as table_file:        dict_reader = csv.DictReader(f_in, delimiter=',')        all_fieldnames = dict_reader.fieldnames                # determine which fieldnames go to which files        anon_fieldnames, table_fieldnames = make_headers(            new_header, all_fieldnames, fields_to_remove)                    # write headers of both files        anon_dict_writer, table_writer = write_both_headers(            anon_file, anon_fieldnames, table_file, table_fieldnames)                    # fill both files        fill_both_files(dict_reader, anon_fieldnames, table_fieldnames, \                        anon_dict_writer, table_writer, new_header)                if __name__ == '__main__':    # anonymize('midterm.txt', ['STUDENTID','FIRSTNAME'])    anonymize('midterm.txt', ['FIRSTNAME'])